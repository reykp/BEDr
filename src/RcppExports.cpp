// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// duos
List duos(NumericVector y, double k, double N, NumericVector alpha, double scale_l, double scale_u, NumericVector start);
RcppExport SEXP _biRd_duos(SEXP ySEXP, SEXP kSEXP, SEXP NSEXP, SEXP alphaSEXP, SEXP scale_lSEXP, SEXP scale_uSEXP, SEXP startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type scale_l(scale_lSEXP);
    Rcpp::traits::input_parameter< double >::type scale_u(scale_uSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type start(startSEXP);
    rcpp_result_gen = Rcpp::wrap(duos(y, k, N, alpha, scale_l, scale_u, start));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_biRd_duos", (DL_FUNC) &_biRd_duos, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_biRd(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
